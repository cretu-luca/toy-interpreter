
---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))); ( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( int cnt; newLatch(cnt, readHeap(v2)))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( int cnt; newLatch(cnt, readHeap(v2)))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
writeHeap(v3, readHeap(v3) * 10)
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
writeHeap(v3, readHeap(v3) * 10)
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
print(readHeap(v3))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
print(readHeap(v3))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
countDown(cnt)
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
countDown(cnt)
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))); ( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( int cnt; newLatch(cnt, readHeap(v2)))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( int cnt; newLatch(cnt, readHeap(v2)))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
writeHeap(v3, readHeap(v3) * 10)
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
writeHeap(v3, readHeap(v3) * 10)
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
print(readHeap(v3))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
print(readHeap(v3))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
countDown(cnt)
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
countDown(cnt)
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))); ( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( int cnt; newLatch(cnt, readHeap(v2)))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( int cnt; newLatch(cnt, readHeap(v2)))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
writeHeap(v3, readHeap(v3) * 10)
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
writeHeap(v3, readHeap(v3) * 10)
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
print(readHeap(v3))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
print(readHeap(v3))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
countDown(cnt)
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
countDown(cnt)
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))); ( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4)))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; ( new(v1, 2); ( new(v2, 3); new(v3, 4))))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); ( new(v2, 3); new(v3, 4)))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v2, 3); new(v3, 4))
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( int cnt; newLatch(cnt, readHeap(v2))); ( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( int cnt; newLatch(cnt, readHeap(v2)))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( int cnt; newLatch(cnt, readHeap(v2)))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newLatch(cnt, readHeap(v2))
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt))); ( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt))); ( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100))))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); ( print(readHeap(v1)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt))); ( await(cnt); ( print(100); ( countDown(cnt); print(100)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( print(readHeap(v1)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( print(readHeap(v2)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); ( print(100); ( countDown(cnt); print(100))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( print(readHeap(v2)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( writeHeap(v3, readHeap(v3) * 10); ( print(readHeap(v3)); countDown(cnt)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
writeHeap(v3, readHeap(v3) * 10)
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
writeHeap(v3, readHeap(v3) * 10)
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
2

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
( print(readHeap(v3)); countDown(cnt))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
print(readHeap(v3))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
print(readHeap(v3))
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===
countDown(cnt)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( print(100); ( countDown(cnt); print(100)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( countDown(cnt); print(100))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
countDown(cnt)
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
countDown(cnt)
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(100)


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------


---------- Program State <4>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 40


======== Output =======
20
2
30
3
40
4
100
100

-----------------------------------

