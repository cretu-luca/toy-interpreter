
---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 3
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
20
4
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt))); ( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v1; ( Ref(int) v2; ( Ref(int) v3; int cnt)))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v1
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
Empty symbol table

====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v2; ( Ref(int) v3; int cnt))
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v2
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( Ref(int) v3; int cnt)
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
Ref(int) v3
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
int cnt
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2)))); ( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( ( new(v1, 2); new(v2, 3)); ( new(v3, 4); newBarrier(cnt,  readHeap(v2))))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v1, 2); new(v2, 3))
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v1, 2)
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (0, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
Empty symbol table

======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v2, 3)
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (0, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( new(v3, 4); newBarrier(cnt,  readHeap(v2)))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
new(v3, 4)
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (0, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
newBarrier(cnt,  readHeap(v2))
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))); ( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))); ( await(cnt); print(readHeap(v3))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
fork( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
( await(cnt); print(readHeap(v3)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( await(cnt); ( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
await(cnt)
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
await(cnt)
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===
print(readHeap(v3))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
( writeHeap(v1, readHeap(v1) * 10); print(readHeap(v1)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); ( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2))))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
Empty output
-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
writeHeap(v1, readHeap(v1) * 10)
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 2
2 --> 3
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===
print(readHeap(v1))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
( writeHeap(v2, readHeap(v2) * 10); print(readHeap(v2)))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
writeHeap(v2, readHeap(v2) * 10)
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 30
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===
print(readHeap(v2))


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <1>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <2>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------


---------- Program State <3>----------

=== Execution Stack ===


===== Symbol Table ====
cnt --> 0
v1 --> (1, int)
v2 --> (2, int)
v3 --> (3, int)


====== File Table =====
Empty symbol table

====== Heap Table =====
1 --> 20
2 --> 300
3 --> 4


======== Output =======
4
20
300

-----------------------------------

